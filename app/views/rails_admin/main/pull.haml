- missing_parameters = @pull_request[:missing_parameters]
- pull_parameters = @pull_request[:pull_parameters]
- new_records = @pull_request[:new_records]
- updated_records = @pull_request[:updated_records]
- pull_data = @pull_request[:pull_data]
- limit = 10
%form{method: 'post', class: 'form-horizontal denser'}
  - if @bulk_ids
    %select{name: 'new_bulk_ids[]', multiple: 'multiple', style: 'display:none'}
      - @bulk_ids.each do |id|
        %option{value: id, selected: 'selected'}
  - if @object_id
    %input{name: 'object_id', value: @object_id, type: 'hidden'}
  - if @options_key
    - (@options || {}).each do |key, value|
      %input{name: "#{@options_key}[#{key}]", value: value.to_s, type: 'hidden'}
  - uptodate = true
  - if @object.pull_parameters.present?
    - uptodate = false
    %h4= t('admin.actions.pull.fill_parameters')
    .fieldset
      - @object.pull_parameters.each do |pull_parameter|
        .control-group{class: (error = missing_parameters.include?(pull_parameter.id.to_s)) ? 'error' : ''}
          %label.col-sm-2.control-label
            = pull_parameter.label
          .col-sm-10.controls
            %input{type: 'text', size: 50, name: "pull_parameters[#{pull_parameter.id}]", value:  pull_parameters[pull_parameter.id.to_s]}
            - if error
              %span{class: 'help-inline'}
                = "can't be blank"
            %p.help-block
              = 'Required'
  - unless new_records.blank?
    - uptodate = false
    %h4{style: 'color:#b94a48'}= t('admin.actions.pull.create_warning')
    .fieldset
      - new_records.each do |key, records|
        .control-group
          %label.col-sm-2.control-label
            = key.titleize
          .col-sm-10.controls
            - a = []
            - records.each { |record| next if a.length > limit; a << ((ns = record['namespace']) ? "'#{ns} | #{record['name']}'" : "'#{record['name']}'") }
            - a << "#{t('admin.actions.pull.another')} #{records.count - a.length}" if a.length < records.count
            = a.to_sentence.html_safe
            %p.help-block
              = "#{records.count} #{key.titleize.downcase.pluralize}"
  - unless updated_records.blank?
    - uptodate = false
    %h4{style: 'color:#b94a48'}= t('admin.actions.pull.update_warning')
    .fieldset
      - updated_records.each do |key, records|
        .control-group
          %label.col-sm-2.control-label
            = key.titleize
          .col-sm-10.controls
            - am = RailsAdmin::Config.model(records.first.class).abstract_model
            - a = []
            - records.each { |record| next if a.length > limit; a << link_to(record.try(:custom_title) || record.name, url_for(action: action(:show, am, record).action_name, model_name: record.class.to_s, id: record.id), class: 'pjax') }
            - a << "#{t('admin.actions.pull.another')} #{records.count - a.length}" if a.length < records.count
            = a.to_sentence.html_safe
            %p.help-block
              = "#{records.count} #{key.titleize.downcase.pluralize}"
  - if uptodate
    - collection_link = link_to(@object.name, rails_admin.show_path(model_name: Setup::Collection.to_s.underscore.gsub('/', '~'), id: @object.name), class: 'pjax')
    %h4=  t('admin.actions.pull.uptodate', collection: collection_link, shared_collection: @object.versioned_name).html_safe
  .form-group.form-actions
  .col-sm-offset-2.col-sm-10
    - if uptodate
      %span.extra_buttons
        %button.btn{type: 'submit', name: '_pull', :'data-disable-with' => t('admin.form.ok')}
          %i.icon-ok
          = t('admin.form.ok')
    - else
      %button.btn.btn-primary{type: 'submit', name: '_pull', :'data-disable-with' => t('admin.actions.pull.submit')}
        %i{class: @action.try(:link_icon)}
        = t('admin.actions.pull.submit')
      %span.extra_buttons
        %button.btn{type: 'submit', name: '_continue', :'data-disable-with' => t('admin.form.cancel')}
          %i.icon-remove
          = t('admin.form.cancel')
