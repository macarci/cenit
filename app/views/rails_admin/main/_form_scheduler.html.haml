.scheduler_field
  %input#setup_scheduler_expression.form-control{type:"hidden", name:"setup_scheduler[expression]"}

  - dd = dh

  .label.top
    %label
      = t('admin.scheduler.start')
  #scheduler_startat
    .clearfix
      .col-sm-2
        %select#start_sl.form-control.input-sm{style:'vertical-align: top'}
          %option{value:0, selected: !(dd.has_key? 'start_at')}
            = t('admin.scheduler.asap')
          %option{value:1, selected: (dd.has_key? 'start_at')}
            = t('admin.scheduler.at')
      #start_1.form-inline.col-sm-10{class: (dd.has_key? 'start_at')? '': 'hidden'}
        - source = (dd.has_key? 'start_at') ? dd['start_at'] : dd['now']
        .form-group
          .input-group.date
            %input#start_date.form-control.input-sm.datepicker{type:'text', value: source}
            %span.input-group-addon
              %span.fa.fa-calendar
  .label.top
    %label
      = t('admin.scheduler.repeat')
  #scheduler_frequency
    .clearfix
      .col-sm-2
        %select#frequency.form-control.input-sm
          - %w(never every manual).each_with_index do |v, i|
            %option{value:i, selected: dd['frequency'] == i}
              = t("admin.scheduler.frequency.#{v}")
      #cyclic_expr.form_inline.col-sm-10.visible-1
        - val = (dd['cyclic_expression'][0..-1] or "1").to_i
        %input#cyclic_num.form-control.input-sm.inlined.text-right{type:'number', name: 'cyclic_num', value:val, min:1, size:2}
        %select#cyclic_unit.form-control.input-sm.inlined
          - %w(m h d w M).each do |v|
            %option{value:v, selected: (dd['cyclic_expression'].ends_with? v)}
              = t("admin.scheduler.every.#{v}")

  #scheduler_hours.scheduler_repeat.visible-2
    .clearfix
      .col-sm-2
        = t('admin.scheduler.at')
      #hours_at.form-inline.col-sm-10
        - hour = (dd.has_key? 'hours') ? dd['hours'][0] : Time.now.hour
        - min = (dd.has_key? 'minutes') ? dd['minutes'][0] : Time.now.min
        - value = hour.to_s + ':' + min.to_s
        .form-group
          .input-group.date
            %input#start_time.form-control.input-sm.timepicker{type: 'text', value: value}
              %span.input-group-addon
                %span.fa.fa-clock-o
  #scheduler_days.scheduler_repeat.visible-2
    .clearfix
      .col-sm-2
        %select#days_sl.form-control.input-sm.col-sm-12{style:'vertical-align: top'}
          %option{value:1, selected: (dd.has_key? 'weeks_days')}
            = t('admin.scheduler.days.weekly')
          %option{value:2, selected: (dd.has_key? 'months_days') || (dd.has_key? 'last_day_in_month')}
            = t('admin.scheduler.days.monthly')
      #days_1.form-inline.col-sm-10{class: ((!((dd.has_key? 'months_days') || (dd.has_key? 'last_day_in_month'))) ||(dd.has_key? 'weeks_days')) ? '' : 'hidden'}
        .clearfix
          .scheduler-opts.btn-group.btn-group-sm{role: 'btn-group'}
            - sch_week_days.each_with_index do |d, i|
              %a.btn.day_in_week{id: "week_day_#{i}", href: '#', class: (dd['weeks_days'].include? i) ? 'btn-primary' : 'btn-default'}
                = d
        .clearfix.bottom
          .scheduler-opts.btn-group.btn-group-sm{role: 'btn-group'}
            - sch_month_weeks.each_with_index do |w, i|
              %a.btn{id: "weeks_monthly_at_#{i}", href: '#', class: (dd['weeks_month'].include? i) ? 'btn-primary' : 'btn-default'}
                = w
            %a.btn{id: 'last_week_in_month', href: '#', class: ((dd.has_key? 'last_week_in_month') && (dd['last_week_in_month'])) ? 'btn-primary' : 'btn-default'}
              = t('admin.scheduler.last')
          %span
            = t('admin.scheduler.weeks.label')
      #days_2.form-inline.col-sm-10{class: ((dd.has_key? 'months_days') || (dd.has_key? 'last_day_in_month')) ? '' : 'hidden'}
        - (0..3).to_a.each do |w|
          .clearfix
            .scheduler-opts.btn-group.btn-group-sm{role: 'btn-group'}
              - (0..7).to_a.each do |i|
                - d = ((w*8)+(i+1))
                - if d < 32
                  %a.btn.day_in_month{id: "months_day_#{d}", href: '#', class: (dd['months_days'].include? d) ? 'btn-primary' : 'btn-default'}
                    = d
                - else
                  %a.btn.day_in_month{id: 'last_day_in_month', href: '#', class: ((dd.has_key? 'last_day_in_month') && (dd['last_day_in_month'])) ? 'btn-primary' : 'btn-default'}
                    = t('admin.scheduler.last')

  #scheduler_months.scheduler_repeat.visible-2
    .clearfix
      .col-sm-2
        = t('admin.scheduler.every.annually')
      #months_1.form-inline.col-sm-10
        .clearfix
          .scheduler-opts.btn-group.btn-group-sm{role: 'btn-group'}
            - sch_month_names.each_with_index do |m, i|
              %a.btn{id: "month_#{i+1}", href: '#', class: (dd['months'].include? i+1) ? 'btn-primary' : 'btn-default'}
                = m

  .label.top.hidden-0
    %label
      = t('admin.scheduler.end')
  #scheduler_end.hidden-0
    .clearfix
      .col-sm-2
        %select#end_sl.form-control.input-sm.col-sm-12{style:'vertical-align: top'}
          %option{value:0, selected: !(dd.has_key? 'end_at')}
            = t('admin.scheduler.never')
          %option{value:1, selected: (dd.has_key? 'end_at')}
            = t('admin.scheduler.at')
      -#%option{value:2}
            = t('admin.scheduler.after')
      #end_1.form-inline.col-sm-10{class: (dd.has_key? 'end_at')? '': 'hidden'}
        - source = (dd.has_key? 'end_at') ? dd['end_at'] : dd['now']
        .form-group{style: 'margin-right: 25px'}
          .input-group.date
            %input#end_date.form-control.input-sm.datepicker{type:'text', value: source, }
              %span.input-group-addon
                %span.fa.fa-calendar
        -##end_2.col-sm-10.hidden
        .form-group.hidden
          .input-group
            %input#max_repeat.form-control.input-sm.text-right{type:'number', name: 'max_repeat', value:1, min:1, max: 999999, size: 2}
              %span.input-group-addon
                = t('admin.scheduler.repetitions')
